---
title: "Powell - Viz Doc"
format: html
editor: visual
---



## Data import

```{r}
library(tidyverse)


```


## Viz 1 - Interactive data Table

1. import data year by year

```{r}

offense_data_2018 <- read.csv("data/DC-2018/NIBRS_OFFENSE.csv") %>% mutate(year = 2018)
location_2018 <- read.csv("data/DC-2018/NIBRS_LOCATION_TYPE.csv")
offense_2018 <- read.csv("data/DC-2018/NIBRS_OFFENSE_TYPE.csv")
offense_data_2018 <- left_join(offense_data_2018,location_2018, by = "LOCATION_ID")
offense_data_2018 <- left_join(offense_data_2018,offense_2018, by = "OFFENSE_TYPE_ID")
print(dim(offense_data_2018))

offense_data_2019 <- read.csv("data/DC-2019/NIBRS_OFFENSE.csv") %>% mutate(year = 2019)
location_2019 <- read.csv("data/DC-2019/NIBRS_LOCATION_TYPE.csv")
offense_2019 <- read.csv("data/DC-2019/NIBRS_OFFENSE_TYPE.csv")
offense_data_2019 <- left_join(offense_data_2019,location_2019, by = "LOCATION_ID")
offense_data_2019 <- left_join(offense_data_2019,offense_2019, by = "OFFENSE_TYPE_ID")
print(dim(offense_data_2019))

offense_data_2020 <- read.csv("data/DC-2020/NIBRS_OFFENSE.csv") %>% mutate(year = 2020)
location_2020 <- read.csv("data/DC-2020/NIBRS_LOCATION_TYPE.csv")
offense_2020 <- read.csv("data/DC-2020/NIBRS_OFFENSE_TYPE.csv")
offense_data_2020 <- left_join(offense_data_2020,location_2020, by = "LOCATION_ID")
offense_data_2020 <- left_join(offense_data_2020,offense_2020, by = "OFFENSE_TYPE_ID")
print(dim(offense_data_2020))

offense_data_2021 <- read.csv("data/DC-2021/NIBRS_OFFENSE.csv") %>% mutate(year = 2021)
location_2021 <- read.csv("data/DC-2021/NIBRS_LOCATION_TYPE.csv")
offense_2021 <- read.csv("data/DC-2021/NIBRS_OFFENSE_TYPE.csv")
offense_data_2021 <- left_join(offense_data_2021,location_2021, by = "location_id")
offense_data_2021 <- left_join(offense_data_2021,offense_2021, by = "offense_code")
print(dim(offense_data_2021))

offense_data_2022 <- read.csv("data/DC-2022/NIBRS_OFFENSE.csv") %>% mutate(year = 2022)
location_2022 <- read.csv("data/DC-2022/codes/NIBRS_LOCATION_TYPE.csv")
offense_2022 <- read.csv("data/DC-2022/codes/NIBRS_OFFENSE_TYPE.csv")
offense_data_2022 <- left_join(offense_data_2022,location_2022, by = "location_id")
offense_data_2022 <- left_join(offense_data_2022,offense_2022, by = "offense_code")
print(dim(offense_data_2022))

```


2. find package to do this again
  https://towardsdatascience.com/top-7-packages-for-making-beautiful-tables-in-r-7683d054e541
3. merge data as needed
```{r}

offense_data_bundle1 = rbind(offense_data_2018,offense_data_2019,offense_data_2020)
offense_data_bundle2 = rbind(offense_data_2021,offense_data_2022)

colnames(offense_data_bundle1) = tolower(colnames(offense_data_bundle1))

offense_data_bundle1 <- offense_data_bundle1 %>% select(-c(offense_type_id, offense_code))
offense_data_bundle2 <- offense_data_bundle2 %>% select(-c(offense_code))

for(i in 1:ncol(offense_data_bundle1)){
  #print(i)
  #print(colnames(offense_data_bundle1)[i])
  #print(colnames(offense_data_bundle2)[i])
}

offense_data_total = rbind(offense_data_bundle1,offense_data_bundle2)

offense_data_total$location_name %>% table() %>% as.data.frame()
offense_data_total$offense_name %>% table() %>% as.data.frame()

table_data = offense_data_total %>% group_by(year,offense_name) %>% tally() %>%
  spread(year,n)

colnames(table_data)[1] <- "Offense"
rownames(table_data) <- NULL

```

```{r}

table_data3 = offense_data_total %>% group_by(year) %>% tally() %>%
  spread(year,n)
```


4. Arrange data

```{r}

library(DT)

datatable(data = table_data,
          caption = "Table",
          filter = "top")

## Sans serif font
## format numbers with commas for thousands

```



## Viz 2 - Treemap

1. import data year by year
2. find package to do this again
  https://plotly.com/r/treemaps/
  https://community.plotly.com/t/how-can-i-display-percentage-subtotals-at-each-category-level-in-treemap-chart/68142
3. merge data as needed
4. Arrange data

```{r}
library(plotly)
library(ggplot2)
#library(treemap)
#library(d3Tree)
library(treemapify)

table_data2 = offense_data_total %>% group_by(location_name) %>% tally()
colnames(table_data2) <- c("Location","Amount")

plot <- ggplot(table_data2, aes(area = Amount, fill = Location, label = Location)) + 
  geom_treemap() + 
  geom_treemap_text() +
  theme(legend.position = "none")

## Don't totally aggregate
## Too many categories, could group, other option
### Bar plot may be easier, areas are harder to compare
```


## Network connections

going crazy here

```{r}
offense_data_total %>% nrow()
offense_data_total$incident_id %>% unique() %>% length()
offense_data_total$offense_id %>% unique() %>% length()

duplicated_data <- offense_data_total[offense_data_total$incident_id %in% offense_data_total$incident_id[duplicated(offense_data_total$incident_id)],]

num_incidents <- duplicated_data$incident_id %>% unique()

adjacency_list <- c("source","target") %>% t() %>% as.data.frame()

#length(num_incidents)
```


```{r}
adjacency_list <- c("source","target") %>% t() %>% as.data.frame()

for(i in 1:length(num_incidents)){
  print(i)
  incident_instance <- num_incidents[i]
  incident_df <- duplicated_data %>% filter(incident_id == incident_instance)
  for(g in 1:(nrow(incident_df)-1)){
    if(g == nrow(incident_df)){
      life = 0
    }
    for(f in (g+1):nrow(incident_df)){
      insert <- c(incident_df[g,11],incident_df[f,11])
      adjacency_list <- rbind(adjacency_list, insert)
    }
  }
}
  
colnames(adjacency_list) <- adjacency_list[1,]
adjacency_list <- adjacency_list[-1,]


```

```{r}
library(igraph)

adjacency_matrix <- as.matrix(adjacency_list)
adjacency_matrix <- get.adjacency(graph.edgelist(adjacency_matrix)) %>% as.matrix()

crime_names <- rownames(adjacency_matrix) %>% as.data.frame()

offense_freq <- offense_data_total$offense_name %>% table() %>% as.data.frame()
offense_freq$Freq <- (offense_freq$Freq-mean(offense_freq$Freq))/ sd(offense_freq$Freq)

crime_stats <- left_join(crime_names, offense_freq)

```


```{r}

library(plotly)
library(ggnetwork)
library(network)
library(sna)
library(ggplot2)
library(GGally)
library(intergraph)

#network <- asNetwork(network)
net = network(adjacency_matrix, directed = FALSE)


net %v% "Crime" = crime_stats$.
net %v% "Freq" = crime_stats$Freq
net %v% "Label" = crime_stats$.

list.edge.attributes(net)

net <- set.edge.value(net, "Weight", adjacency_matrix)

p <- ggnet2(net,
            mode = "circle",
            node.size = "Freq",
            node.color = "Crime",
            edge.size = 1,
            edge.color = "grey",
            #edge.size = "Weight",
            edge.alpha = .1,
            label = TRUE) +
  theme(legend.position = "none") + labs(title = "Relationship between Offenses Within Incidents")

ggplotly(p)

#?ggnet2

```


## Viz 3

```{r}
## 2018
offense_data_2018 <- read.csv("data/DC-2018/NIBRS_OFFENSE.csv") %>% mutate(year = 2018)
offense_2018 <- read.csv("data/DC-2018/NIBRS_OFFENSE_TYPE.csv")
victim_data_2018 <- read.csv("data/DC-2018/NIBRS_VICTIM.csv") %>% mutate(year = 2018)
relation_2018 <- read.csv("data/DC-2018/NIBRS_VICTIM_OFFENDER_REL.csv")
relationship_2018 <- read.csv("data/DC-2018/NIBRS_RELATIONSHIP.csv")

offense_data_2018 <- left_join(offense_data_2018,offense_2018, by = "OFFENSE_TYPE_ID")
relation_2018 <- left_join(relation_2018,relationship_2018, by = "RELATIONSHIP_ID")
victim_data_2018 <- right_join(victim_data_2018,relation_2018, by = "VICTIM_ID")
total_data_2018 <- left_join(victim_data_2018,offense_data_2018, by = c("INCIDENT_ID","year"))
total_data_2018 <- total_data_2018 %>% select(c(RELATIONSHIP_NAME,OFFENSE_CATEGORY_NAME, year))

## 2019
offense_data_2019 <- read.csv("data/DC-2019/NIBRS_OFFENSE.csv") %>% mutate(year = 2019)
offense_2019 <- read.csv("data/DC-2019/NIBRS_OFFENSE_TYPE.csv")
victim_data_2019 <- read.csv("data/DC-2019/NIBRS_VICTIM.csv") %>% mutate(year = 2019)
relation_2019 <- read.csv("data/DC-2019/NIBRS_VICTIM_OFFENDER_REL.csv")
relationship_2019 <- read.csv("data/DC-2019/NIBRS_RELATIONSHIP.csv")

offense_data_2019 <- left_join(offense_data_2019,offense_2019, by = "OFFENSE_TYPE_ID")
relation_2019 <- left_join(relation_2019,relationship_2019, by = "RELATIONSHIP_ID")
victim_data_2019 <- right_join(victim_data_2019,relation_2019, by = "VICTIM_ID")
total_data_2019 <- left_join(victim_data_2019,offense_data_2019, c("INCIDENT_ID","year"))
total_data_2019 <- total_data_2019 %>% select(c(RELATIONSHIP_NAME,OFFENSE_CATEGORY_NAME, year))

## 2020
offense_data_2020 <- read.csv("data/DC-2020/NIBRS_OFFENSE.csv") %>% mutate(year = 2020)
offense_2020 <- read.csv("data/DC-2020/NIBRS_OFFENSE_TYPE.csv")
victim_data_2020 <- read.csv("data/DC-2020/NIBRS_VICTIM.csv") %>% mutate(year = 2020)
relation_2020 <- read.csv("data/DC-2020/NIBRS_VICTIM_OFFENDER_REL.csv")
relationship_2020 <- read.csv("data/DC-2020/NIBRS_RELATIONSHIP.csv")

offense_data_2020 <- left_join(offense_data_2020,offense_2020, by = "OFFENSE_TYPE_ID")
relation_2020 <- left_join(relation_2020,relationship_2020, by = "RELATIONSHIP_ID")
victim_data_2020 <- right_join(victim_data_2020,relation_2020, by = "VICTIM_ID")
total_data_2020 <- left_join(victim_data_2020,offense_data_2020, by = c("INCIDENT_ID","year"))
total_data_2020 <- total_data_2020 %>% select(c(RELATIONSHIP_NAME,OFFENSE_CATEGORY_NAME, year))

## 2021
offense_data_2021 <- read.csv("data/DC-2021/NIBRS_OFFENSE.csv") %>% mutate(year = 2021)
offense_2021 <- read.csv("data/DC-2021/NIBRS_OFFENSE_TYPE.csv")
victim_data_2021 <- read.csv("data/DC-2021/NIBRS_VICTIM.csv") %>% mutate(year = 2021)
relation_2021 <- read.csv("data/DC-2021/NIBRS_VICTIM_OFFENDER_REL.csv")
relationship_2021 <- read.csv("data/DC-2021/NIBRS_RELATIONSHIP.csv")

offense_data_2021 <- left_join(offense_data_2021,offense_2021, by = "offense_code")
relation_2021 <- left_join(relation_2021,relationship_2021, by = "relationship_id")
victim_data_2021 <- right_join(victim_data_2021,relation_2021, by = "victim_id")
total_data_2021 <- left_join(victim_data_2021,offense_data_2021, by = c("incident_id","year"))
total_data_2021 <- total_data_2021 %>% select(c(relationship_name,offense_category_name, year))

## 2022
offense_data_2022 <- read.csv("data/DC-2022/NIBRS_OFFENSE.csv") %>% mutate(year = 2022)
offense_2022 <- read.csv("data/DC-2022/Codes/NIBRS_OFFENSE_TYPE.csv")
victim_data_2022 <- read.csv("data/DC-2022/NIBRS_VICTIM.csv") %>% mutate(year = 2022)
relation_2022 <- read.csv("data/DC-2022/NIBRS_VICTIM_OFFENDER_REL.csv")
relationship_2022 <- read.csv("data/DC-2022/Codes/NIBRS_RELATIONSHIP.csv")

offense_data_2022 <- left_join(offense_data_2022,offense_2022, by = "offense_code")
relation_2022 <- left_join(relation_2022,relationship_2022, by = "relationship_id")
victim_data_2022 <- right_join(victim_data_2022,relation_2022, by = "victim_id")
total_data_2022 <- left_join(victim_data_2022,offense_data_2022, by = c("incident_id","year"))
total_data_2022 <- total_data_2022 %>% select(c(relationship_name,offense_category_name, year))

## adjusting colnames for difference
colnames(total_data_2021) <- c("RELATIONSHIP_NAME","OFFENSE_CATEGORY_NAME", "year")
colnames(total_data_2022) <- c("RELATIONSHIP_NAME","OFFENSE_CATEGORY_NAME", "year")

## groups
total_data_relation <- rbind(total_data_2018, total_data_2019, total_data_2020, total_data_2021, total_data_2022)

## relationships store for next chunk
relationships <- total_data_relation$RELATIONSHIP_NAME %>% factor() %>% levels()

```

```{r}

## Splitting the relationships type into indicies and then filtering by them
family_relationships_index <- c(6,14,15,16,19,21,22)
partner_relationships_index <- c(1,5,7,8,11,12,23,24,25,26)
acquaintance_relationships_index <- c(3,4,9,10,13,17,18,20)
stranger_relationships_index <- c(27)
other_relationships_index <- c(2)

family_relationships <- relationships[family_relationships_index]
partner_relationships <- relationships[partner_relationships_index]
acquaintance_relationships <- relationships[acquaintance_relationships_index]
stranger_relationships <- relationships[stranger_relationships_index]
other_relationships <- relationships[other_relationships_index]

## Function for new column of values
relation_checker <- function(value){
  if(value %in% family_relationships){
    val <- "Family"
  } else if(value %in% partner_relationships){
    val <- "Partner/Partners Family"
  } else if(value %in% acquaintance_relationships){
    val <- "Acquaintance"
  } else if(value %in% stranger_relationships){
    val <- "Stranger"
  } else{
    val <- "Other"
  }
}

## vectorizing the function and adding the colum
relation_checker <- Vectorize(relation_checker)

total_data_relation <- total_data_relation %>% mutate(Relation_group = relation_checker(RELATIONSHIP_NAME)) %>% filter(Relation_group != "Other")
#total_data_relation$Relation_group %>% table()


```


```{r}

library(tidyverse)
library(viridis)
library(plotly)
library(heatmaply)

## Making matrix for Viz
mat <- total_data_relation %>% group_by(Relation_group,OFFENSE_CATEGORY_NAME) %>% tally() %>%
  spread(Relation_group,n) %>% as.data.frame()
mat[is.na(mat)] <- 0
rownames(mat) <- mat$OFFENSE_CATEGORY_NAME
mat <- mat %>% select(-OFFENSE_CATEGORY_NAME)

#p1 <- heatmap(mat)

## Heatmap code
ptotal <- heatmaply(mat,
             label_names = c("Crime Group", "Relation", "Relation Prevelance"),
             width  = 800, height = 800,
             dendrogram = FALSE,
             limits = c(0,10000),
             scale = "row",
             branches_lwd = 0.1,
             hide_colorbar = TRUE,
             grid_color = "white",
             grid_width = 0.00001,
             dend_hoverinfo = FALSE,
             main = "LETS GOO"
             ) %>%
        layout(title = 'check this out')

ptotal

?heatmaply


```


